definitions:
  services:
    docker:
      memory: 2048
  steps:
    - step: &build-image
        name: Build Docker image
        script:
          - docker build -t pzkogrodek-cms --build-arg NODE_ENV=production .
          - docker save --output tmp-image.docker pzkogrodek-cms
        artifacts:
          - tmp-image.docker
        services:
          - docker
    - step: &push-gcp
        name: Push to image registry
        image: google/cloud-sdk:alpine
        script:
          - docker load --input ./tmp-image.docker
          # Authenticating with the service account key file
          - echo "$GCLOUD_API_KEYFILE" | base64 -d > ./gcloud-api-key.json
          - docker login -u _json_key --password-stdin https://europe-central2-docker.pkg.dev < gcloud-api-key.json
          - gcloud config set project $GCLOUD_PROJECT
          # Tag container & push
          - docker tag pzkogrodek-cms europe-central2-docker.pkg.dev/devx-f35b9/pzko-grodek/pzkogrodek-cms:$BITBUCKET_TAG
          # Login to google docker hub
          - cat ./gcloud-api-key.json | docker login -u _json_key --password-stdin https://europe-central2-docker.pkg.dev
          - docker push europe-central2-docker.pkg.dev/devx-f35b9/pzko-grodek/pzkogrodek-cms:$BITBUCKET_TAG
        services:
          - docker
    - step: &deploy
        name: Deploy to k8s
        image:
          name: europe-central2-docker.pkg.dev/devx-f35b9/devx/kube-image/kube-image:v1.1.0
          username: _json_key
          password: '$GCR_JSON_KEY'
        script:
          - doctl auth init
          - doctl kubernetes cluster kubeconfig save $CLUSTER_NAME_STAGING
          - helm repo add devx https://chartmuseum.devx-testing.agency --username $HELM_USERNAME --password "$HELM_PASSWORD"
          - helm repo update
          - helm upgrade pzkogrodek-cms devx/pzkogrodek-cms --set image.tag=$BITBUCKET_TAG

pipelines:
  tags:
    'v*.*.*':
      - step: *build-image
      - step: *push-gcp
      - step: *deploy
